# Production Configuration for Tutorverse Backend
spring.application.name=Tutorverse

# Database Configuration (Production)
spring.datasource.url=jdbc:postgresql://129.159.229.155:5431/Development
spring.datasource.username=group29
spring.datasource.password=project25
spring.datasource.driver-class-name=org.postgresql.Driver

# Frontend and Backend URLs (Production)
app.frontend.url=https://m.tutorverse.app
app.backend.url=https://backend.shancloudservice.com

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Configuration
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Logging Configuration
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO
logging.level.org.springframework.security=INFO
logging.level.com.tutoring.Tutorverse.Controller.AuthController=INFO
logging.level.root=INFO

# OAuth2 Google Configuration (Production)
spring.security.oauth2.client.registration.google.redirect-uri=${app.backend.url}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# SSL Configuration
server.ssl.enabled=true

# AWS Configuration
aws.accessKey=${AWS_ACCESS_KEY}
aws.secretKey=${AWS_SECRET_KEY}
aws.region=${AWS_REGION}
aws.bucketName=${AWS_BUCKET_NAME}

# SendGrid Configuration
sendgrid.api.key=${SENDGRID_API_KEY}

# Set active profile
spring.profiles.active=prod