# Test Database Configuration
spring.datasource.url=jdbc:postgresql://129.159.229.155:5431/TEST
spring.datasource.username=group29
spring.datasource.password=project25
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration for Tests
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Disable Flyway for tests (we rely on hibernate ddl-auto)
spring.flyway.enabled=false

# JWT Configuration for Tests
jwt.secret=testJwtSecretKeyForIntegrationTestsOnlyNotForProduction
jwt.expiration=86400000

# Logging Configuration for Tests
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Spring Security Test Configuration
spring.security.require-ssl=false

# Test-specific configurations
spring.test.database.replace=none
spring.jpa.defer-datasource-initialization=false

# Frontend URL for CORS (test environment)
app.frontend.url=${FRONTEND_URL:http://localhost:3000}

# Backend URL for test environment
app.backend.url=${BACKEND_URL:http://localhost:8080}

# OAuth2 Configuration (if needed for tests)
spring.security.oauth2.client.registration.google.client-id=test-client-id
spring.security.oauth2.client.registration.google.client-secret=test-client-secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${BACKEND_URL:http://localhost:8080}/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo