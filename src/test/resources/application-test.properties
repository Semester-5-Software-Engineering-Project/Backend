# Test Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/Testing
spring.datasource.username=group29
spring.datasource.password=project25
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration for Tests
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF

# Flyway enabled for migration-based schema creation - tests only
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-disabled=false
spring.flyway.ignore-migration-patterns=*:missing

# JWT Configuration for Tests
jwt.secret=testJwtSecretKeyForIntegrationTestsOnlyNotForProduction
jwt.expiration=86400000

Logging Configuration for Tests
logging.level.root=WARN
logging.level.org.springframework.security=OFF
logging.level.org.springframework.web=OFF
logging.level.org.hibernate=OFF
logging.level.org.hibernate.engine=OFF
logging.level.org.hibernate.engine.jdbc=OFF
logging.level.org.hibernate.engine.jdbc.spi=OFF
logging.level.org.hibernate.orm=OFF
logging.level.org.hibernate.stat=OFF
logging.level.org.hibernate.cache=OFF

# Disable SQL logging

spring.jpa.properties.hibernate.show_sql=false


# Disable Hibernate SQL logs

logging.level.org.hibernate.orm.jdbc.bind=OFF
logging.level.org.hibernate.type.descriptor.sql=OFF


# Spring Security Test Configuration
spring.security.require-ssl=false

# Test-specific configurations
spring.test.database.replace=none
spring.jpa.defer-datasource-initialization=false

# Frontend URL for CORS (test environment)
app.frontend.url=${FRONTEND_URL:http://localhost:3000}

# Backend URL for test environment
app.backend.url=${BACKEND_URL:http://localhost:8080}

# OAuth2 Configuration (if needed for tests)
spring.security.oauth2.client.registration.google.client-id=test-client-id
spring.security.oauth2.client.registration.google.client-secret=test-client-secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${BACKEND_URL:http://localhost:8080}/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo