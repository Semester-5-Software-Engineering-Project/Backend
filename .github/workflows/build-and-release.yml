name: Build and Release Java Application

on:
  push:
    branches: [ "Development_2.0", "main" ]
    tags: [ "v*" ]
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write   # âœ… allow release + upload assets
  packages: write  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: tutorverse-jar-${{ github.sha }}
        path: target/Tutorverse-0.0.1-SNAPSHOT.jar
        retention-days: 30

    - name: Rename JAR for release
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cp target/Tutorverse-0.0.1-SNAPSHOT.jar tutorverse-backend-${{ github.ref_name }}.jar
        ls -la tutorverse-backend-${{ github.ref_name }}.jar

    - name: Create Release and Upload Assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## ðŸš€ Release ${{ github.ref_name }}
          
          **Built from commit:** `${{ github.sha }}`
          **Build date:** ${{ github.event.head_commit.timestamp }}
          
          ## ðŸ“‹ What's Included
          - OAuth2 authentication with Google
          - Environment-aware configuration  
          - Production-ready Docker setup
          - Automated CI/CD pipeline
          
          ## ðŸš€ Quick Deploy
          ```bash
          # Download and run
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/tutorverse-backend-${{ github.ref_name }}.jar
          java -jar tutorverse-backend-${{ github.ref_name }}.jar
          ```
          
          ## ðŸ“Š Using curl
          ```bash
          curl -L -o app.jar https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/tutorverse-backend-${{ github.ref_name }}.jar
          java -jar app.jar
          ```
        files: |
          tutorverse-backend-${{ github.ref_name }}.jar
        fail_on_unmatched_files: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
