version: '3.8'

services:
  # Tutorverse Backend Service
  tutorverse-backend:
    build:
      context: .
      dockerfile: Dockerfile
    # Or use pre-built image:
    # image: tutorverse-backend:latest
    container_name: tutorverse-backend
    ports:
      - "8080:8080"
    environment:
      # Frontend & Backend URLs
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:8080}
      
      # Database Configuration
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL:-jdbc:postgresql://129.159.229.155:5431/Development}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME:-group29}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD:-project25}
      
      # OAuth2 Configuration
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      
      # AWS Configuration
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      
      # Email Configuration
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      
      # Optional configurations
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
      - SERVER_PORT=8080
    
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Restart policy
    restart: unless-stopped
    
    # Optional: Mount logs directory
    volumes:
      - ./logs:/app/logs
    
    # Optional: Network configuration
    networks:
      - tutorverse-network

# Optional: If you want to include a PostgreSQL database
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: tutorverse-postgres
  #   environment:
  #     - POSTGRES_DB=tutorverse
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=your-postgres-password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - tutorverse-network

# Optional: Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: tutorverse-redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - tutorverse-network

networks:
  tutorverse-network:
    driver: bridge

# Optional: Volumes for database persistence
# volumes:
#   postgres_data: